<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='waiting_times' inline='true' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='waiting_times' name='textscan.0rbq8bx0ofn47l1b4qhtk1w5bnyq'>
            <connection class='textscan' directory='C:/Users/LarrySang/Documents/Master DSBA/Hackthon' filename='waiting_times.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0rbq8bx0ofn47l1b4qhtk1w5bnyq' name='waiting_times.csv' table='[waiting_times#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='WORK_DATE' ordinal='0' />
            <column datatype='datetime' name='DEB_TIME' ordinal='1' />
            <column datatype='integer' name='DEB_TIME_HOUR' ordinal='2' />
            <column datatype='datetime' name='FIN_TIME' ordinal='3' />
            <column datatype='string' name='ENTITY_DESCRIPTION_SHORT' ordinal='4' />
            <column datatype='integer' name='WAIT_TIME_MAX' ordinal='5' />
            <column datatype='real' name='NB_UNITS' ordinal='6' />
            <column datatype='real' name='GUEST_CARRIED' ordinal='7' />
            <column datatype='real' name='CAPACITY' ordinal='8' />
            <column datatype='real' name='ADJUST_CAPACITY' ordinal='9' />
            <column datatype='integer' name='OPEN_TIME' ordinal='10' />
            <column datatype='integer' name='UP_TIME' ordinal='11' />
            <column datatype='integer' name='DOWNTIME' ordinal='12' />
            <column datatype='real' name='NB_MAX_UNIT' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0rbq8bx0ofn47l1b4qhtk1w5bnyq' name='waiting_times.csv' table='[waiting_times#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='WORK_DATE' ordinal='0' />
            <column datatype='datetime' name='DEB_TIME' ordinal='1' />
            <column datatype='integer' name='DEB_TIME_HOUR' ordinal='2' />
            <column datatype='datetime' name='FIN_TIME' ordinal='3' />
            <column datatype='string' name='ENTITY_DESCRIPTION_SHORT' ordinal='4' />
            <column datatype='integer' name='WAIT_TIME_MAX' ordinal='5' />
            <column datatype='real' name='NB_UNITS' ordinal='6' />
            <column datatype='real' name='GUEST_CARRIED' ordinal='7' />
            <column datatype='real' name='CAPACITY' ordinal='8' />
            <column datatype='real' name='ADJUST_CAPACITY' ordinal='9' />
            <column datatype='integer' name='OPEN_TIME' ordinal='10' />
            <column datatype='integer' name='UP_TIME' ordinal='11' />
            <column datatype='integer' name='DOWNTIME' ordinal='12' />
            <column datatype='real' name='NB_MAX_UNIT' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[WORK_DATE]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>WORK_DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEB_TIME</remote-name>
            <remote-type>135</remote-type>
            <local-name>[DEB_TIME]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>DEB_TIME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEB_TIME_HOUR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEB_TIME_HOUR]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>DEB_TIME_HOUR</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIN_TIME</remote-name>
            <remote-type>135</remote-type>
            <local-name>[FIN_TIME]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>FIN_TIME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ENTITY_DESCRIPTION_SHORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ENTITY_DESCRIPTION_SHORT]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>ENTITY_DESCRIPTION_SHORT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WAIT_TIME_MAX</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WAIT_TIME_MAX]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>WAIT_TIME_MAX</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NB_UNITS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NB_UNITS]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>NB_UNITS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GUEST_CARRIED</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GUEST_CARRIED]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>GUEST_CARRIED</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CAPACITY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CAPACITY]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>CAPACITY</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJUST_CAPACITY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ADJUST_CAPACITY]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>ADJUST_CAPACITY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPEN_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OPEN_TIME]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>OPEN_TIME</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UP_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UP_TIME]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>UP_TIME</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOWNTIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOWNTIME]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>DOWNTIME</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NB_MAX_UNIT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NB_MAX_UNIT]</local-name>
            <parent-name>[waiting_times.csv]</parent-name>
            <remote-alias>NB_MAX_UNIT</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adjust Capacity' datatype='real' name='[ADJUST_CAPACITY]' role='measure' type='quantitative' />
      <column caption='Capacity' datatype='real' name='[CAPACITY]' role='measure' type='quantitative' />
      <column datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(MAX([WAIT_TIME_MAX]), -2, 0)'>
          <table-calc ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Deb Time' datatype='datetime' name='[DEB_TIME]' role='dimension' type='ordinal' />
      <column caption='Deb Time Hour' datatype='integer' name='[DEB_TIME_HOUR]' role='measure' type='quantitative' />
      <column caption='Downtime' datatype='integer' name='[DOWNTIME]' role='measure' type='quantitative' />
      <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
      <column caption='Fin Time' datatype='datetime' name='[FIN_TIME]' role='dimension' type='ordinal' />
      <column caption='Guest Carried' datatype='real' name='[GUEST_CARRIED]' role='measure' type='quantitative' />
      <column caption='Nb Max Unit' datatype='real' name='[NB_MAX_UNIT]' role='measure' type='quantitative' />
      <column caption='Nb Units' datatype='real' name='[NB_UNITS]' role='measure' type='quantitative' />
      <column caption='Open Time' datatype='integer' name='[OPEN_TIME]' role='measure' type='quantitative' />
      <column caption='Up Time' datatype='integer' name='[UP_TIME]' role='measure' type='quantitative' />
      <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
      <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='waiting_times.csv' datatype='table' name='[__tableau_internal_object_id__].[waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C]' role='measure' type='quantitative' />
      <column-instance column='[WAIT_TIME_MAX]' derivation='Attribute' name='[attr:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ADJUST_CAPACITY]' derivation='Avg' name='[avg:ADJUST_CAPACITY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DOWNTIME]' derivation='Avg' name='[avg:DOWNTIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GUEST_CARRIED]' derivation='Avg' name='[avg:GUEST_CARRIED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UP_TIME]' derivation='Avg' name='[avg:UP_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WAIT_TIME_MAX]' derivation='Avg' name='[avg:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WAIT_TIME_MAX]' derivation='Count' name='[cnt:WAIT_TIME_MAX:ok]' pivot='key' type='ordinal' />
      <column-instance column='[WAIT_TIME_MAX]' derivation='Count' name='[cnt:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WAIT_TIME_MAX]' derivation='Avg' name='[diff:avg:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>2019</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:12]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:13]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:15]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:16]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:17]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:18]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:19]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' />
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:20]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' />
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:21]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' ordering-type='Field' type='Difference'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:22]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:23]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:24]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:25]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' />
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:26]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:27]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:28]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:29]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='PaneCol' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:30]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:31]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:32]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' />
          <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Median' name='[diff:med:WAIT_TIME_MAX:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Median' name='[diff:med:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance aggregation-param='95' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[diff:prc95:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>2019</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Sum' name='[diff:sum:WAIT_TIME_MAX:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Sum' name='[diff:sum:WAIT_TIME_MAX:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Sum' name='[diff:sum:WAIT_TIME_MAX:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Sum' name='[diff:sum:WAIT_TIME_MAX:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>2019</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Sum' name='[diff:sum:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[max:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WAIT_TIME_MAX]' derivation='Median' name='[med:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WORK_DATE]' derivation='Month' name='[mn:WORK_DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[WAIT_TIME_MAX]' derivation='None' name='[none:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='25' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[prc25:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='50' column='[UP_TIME]' derivation='Percentile' name='[prc50:UP_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='75' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[prc75:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='90' column='[UP_TIME]' derivation='Percentile' name='[prc90:UP_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='90' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[prc90:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='95' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[prc95:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WORK_DATE]' derivation='Quarter' name='[qr:WORK_DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[WAIT_TIME_MAX]' derivation='Sum' name='[sum:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[win:max:WAIT_TIME_MAX:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[win:max:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Columns' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[WORK_DATE]' derivation='Year' name='[yr:WORK_DATE:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Entity Description Short,YEAR(Work Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
          <groupfilter function='level-members' level='[yr:WORK_DATE:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:ADJUST_CAPACITY:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[attr:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[cnt:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:avg:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:10]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:11]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:12]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:15]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:16]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:17]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:18]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:19]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:20]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:21]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:22]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:23]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:24]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:25]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:26]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:27]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:28]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:29]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:30]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:31]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:32]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:med:WAIT_TIME_MAX:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:med:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:prc95:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:sum:WAIT_TIME_MAX:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:sum:WAIT_TIME_MAX:qk:3]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:sum:WAIT_TIME_MAX:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:sum:WAIT_TIME_MAX:qk:5]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:sum:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[max:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[med:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc25:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc75:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc90:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[sum:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[win:max:WAIT_TIME_MAX:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[win:max:WAIT_TIME_MAX:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:UP_TIME:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc50:UP_TIME:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc90:UP_TIME:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:GUEST_CARRIED:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:13]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:DOWNTIME:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:WORK_DATE:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2021</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2022</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2019</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:WORK_DATE:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2021</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2022</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:WORK_DATE:ok]&#10;[cnt:WAIT_TIME_MAX:ok]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>1</bucket>
              </multibucket>
            </map>
            <map to='#537eab'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>2</bucket>
              </multibucket>
            </map>
            <map to='#5884b0'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>3</bucket>
              </multibucket>
            </map>
            <map to='#5e8ab4'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>4</bucket>
              </multibucket>
            </map>
            <map to='#638fb9'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>5</bucket>
              </multibucket>
            </map>
            <map to='#6995bd'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>6</bucket>
              </multibucket>
            </map>
            <map to='#6f9bc2'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>7</bucket>
              </multibucket>
            </map>
            <map to='#75a1c7'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>8</bucket>
              </multibucket>
            </map>
            <map to='#7ba7cb'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>9</bucket>
              </multibucket>
            </map>
            <map to='#81add0'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>25</bucket>
              </multibucket>
            </map>
            <map to='#87b3d5'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>27</bucket>
              </multibucket>
            </map>
            <map to='#8db9da'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>28</bucket>
              </multibucket>
            </map>
            <map to='#93bfde'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>29</bucket>
              </multibucket>
            </map>
            <map to='#99c5e3'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>30</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>2022</bucket>
                <bucket>31</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='waiting_times.csv' id='waiting_times.csv_3EFE1B6415DF43D68A9FC86A3B1E4C9C'>
            <properties context=''>
              <relation connection='textscan.0rbq8bx0ofn47l1b4qhtk1w5bnyq' name='waiting_times.csv' table='[waiting_times#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='WORK_DATE' ordinal='0' />
                  <column datatype='datetime' name='DEB_TIME' ordinal='1' />
                  <column datatype='integer' name='DEB_TIME_HOUR' ordinal='2' />
                  <column datatype='datetime' name='FIN_TIME' ordinal='3' />
                  <column datatype='string' name='ENTITY_DESCRIPTION_SHORT' ordinal='4' />
                  <column datatype='integer' name='WAIT_TIME_MAX' ordinal='5' />
                  <column datatype='real' name='NB_UNITS' ordinal='6' />
                  <column datatype='real' name='GUEST_CARRIED' ordinal='7' />
                  <column datatype='real' name='CAPACITY' ordinal='8' />
                  <column datatype='real' name='ADJUST_CAPACITY' ordinal='9' />
                  <column datatype='integer' name='OPEN_TIME' ordinal='10' />
                  <column datatype='integer' name='UP_TIME' ordinal='11' />
                  <column datatype='integer' name='DOWNTIME' ordinal='12' />
                  <column datatype='real' name='NB_MAX_UNIT' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_A7206E767D674F1CB4E19A36AFAD71AA]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Monthly Analysis' />
      <command command='tsc:brush'>
        <param name='field-captions' value='YEAR(Work Date)' />
        <param name='target' value='Monthly Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Box Plot for Waiting_Time_Max for Every Attraction for One Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Box Plot for Waiting_Time_Max for Every Attraction for One Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='waiting_times' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5f4z10hhf1o113x7k8r0oknzpn'>
            <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
            <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
            <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[max:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='None' name='[none:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WORK_DATE]' derivation='None' name='[none:WORK_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bumper Cars&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bungee Jump&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Circus Train&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Crazy Dance&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Dizzy Dropper&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Drop Tower&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Flying Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Free Fall&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Giant Wheel&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Giga Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Go-Karts&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Haunted House&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Himalaya Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Inverted Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Kiddie Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Merry Go Round&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Oz Theatre&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Rapids Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Roller Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Spinning Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Spiral Slide&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Superman Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Swing Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Vertical Drop&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Water Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Zipline&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' direction='DESC' using='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[max:WAIT_TIME_MAX:qk]' />
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:ok]'>
            <groupfilter function='member' level='[none:WORK_DATE:ok]' member='#2022-08-18#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:ok]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' value='32' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_red' />
            <format attr='opacity' id='refline0' value='167' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WAIT_TIME_MAX:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WAIT_TIME_MAX:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</rows>
        <cols>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WAIT_TIME_MAX:qk]</cols>
      </table>
      <simple-id uuid='{B26D2FD7-446D-4568-B0CE-0C47F17E99A5}' />
    </worksheet>
    <worksheet name='Hourly Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hourly Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='waiting_times' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5f4z10hhf1o113x7k8r0oknzpn'>
            <column caption='Deb Time' datatype='datetime' name='[DEB_TIME]' role='dimension' type='ordinal' />
            <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
            <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
            <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='Max' forecast-column-base='[max:WAIT_TIME_MAX:qk]' forecast-column-type='forecast-value' name='[fVal:max:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[max:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_DATE]' derivation='None' name='[none:WORK_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEB_TIME]' derivation='Hour-Trunc' name='[thr:DEB_TIME:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]'>
            <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Free Fall&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:qk]' included-values='in-range'>
            <min>#2022-08-01#</min>
            <max>#2022-08-18#</max>
          </filter>
          <slices>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[fVal:max:WAIT_TIME_MAX:qk]</rows>
        <cols>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[thr:DEB_TIME:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{8DDD8F41-1B28-4A7D-A4A4-F81E599A9093}' />
    </worksheet>
    <worksheet name='Monthly Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='waiting_times' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5f4z10hhf1o113x7k8r0oknzpn'>
            <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
            <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
            <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='Count' name='[cnt:WAIT_TIME_MAX:ok]' pivot='key' type='ordinal' />
            <column-instance column='[WORK_DATE]' derivation='Month' name='[mn:WORK_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='None' name='[none:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WORK_DATE]' derivation='None' name='[none:WORK_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WORK_DATE]' derivation='Year' name='[yr:WORK_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[mn:WORK_DATE:ok]'>
            <groupfilter function='member' level='[mn:WORK_DATE:ok]' member='8' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]'>
            <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Roller Coaster&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:qk]' included-values='in-range'>
            <min>#2021-06-01#</min>
            <max>#2022-08-18#</max>
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]'>
            <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:qk]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[mn:WORK_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:qk]' field-type='quantitative' max='#2022-08-19#' min='#2022-07-30#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WAIT_TIME_MAX:qk]' field-type='quantitative' max='97' min='-9' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
              <size column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[cnt:WAIT_TIME_MAX:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WAIT_TIME_MAX:qk]</rows>
        <cols>(([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk] / [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[mn:WORK_DATE:ok]) * [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:qk])</cols>
      </table>
      <simple-id uuid='{D4FC091B-3950-4936-B83B-C6D33B6F82FC}' />
    </worksheet>
    <worksheet name='Park Waiting/Up/Down Time and Capacity/Guest Carried Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Park Waiting/Up/Down Time and Capacity/Guest Carried Overview</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='waiting_times' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5f4z10hhf1o113x7k8r0oknzpn'>
            <column caption='Adjust Capacity' datatype='real' name='[ADJUST_CAPACITY]' role='measure' type='quantitative' />
            <column caption='Downtime' datatype='integer' name='[DOWNTIME]' role='measure' type='quantitative' />
            <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
            <column caption='Guest Carried' datatype='real' name='[GUEST_CARRIED]' role='measure' type='quantitative' />
            <column caption='Up Time' datatype='integer' name='[UP_TIME]' role='measure' type='quantitative' />
            <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
            <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[ADJUST_CAPACITY]' derivation='Avg' name='[avg:ADJUST_CAPACITY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DOWNTIME]' derivation='Avg' name='[avg:DOWNTIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GUEST_CARRIED]' derivation='Avg' name='[avg:GUEST_CARRIED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UP_TIME]' derivation='Avg' name='[avg:UP_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
            <column-instance aggregation-param='50' column='[UP_TIME]' derivation='Percentile' name='[prc50:UP_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='95' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[prc95:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WORK_DATE]' derivation='Day-Trunc' name='[tdy:WORK_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Aeroplane Ride&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Crazy Bus&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Gondola&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Log Flume&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Monorail&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Pirate Ship&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Power Tower&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Reverse Bungee&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Scooby Doo&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Skyway&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Sling Shot&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Tilt-A-Whirl&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Top Spin&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[tdy:WORK_DATE:qk]' included-values='in-range'>
            <min>#2021-12-31 00:00:00#</min>
            <max>#2022-08-18 00:00:00#</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[tdy:WORK_DATE:qk]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#59a14f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:ADJUST_CAPACITY:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:DOWNTIME:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:GUEST_CARRIED:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc50:UP_TIME:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='cell' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</rows>
        <cols>([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk] + ([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:ADJUST_CAPACITY:qk] + ([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:GUEST_CARRIED:qk] + ([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:DOWNTIME:qk] + [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc50:UP_TIME:qk]))))</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:ADJUST_CAPACITY:qk]</field>
                  <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:DOWNTIME:qk]</field>
                  <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:GUEST_CARRIED:qk]</field>
                  <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[avg:UP_TIME:qk]</field>
                  <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
                  <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>29.598870493578833</value>
                <value>0.12857805972458611</value>
                <value>13.351637482593224</value>
                <value>6.5718706483057403</value>
                <value>&quot;Spiral Slide&quot;</value>
                <value>180.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{485191C3-86C0-4C1A-A014-D168E92B328F}' />
    </worksheet>
    <worksheet name='QOQ Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4d5156' fontname='arial' fontsize='17'>QOQ Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='waiting_times' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5f4z10hhf1o113x7k8r0oknzpn'>
            <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
            <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
            <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[diff:max:WAIT_TIME_MAX:qk:13]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
                <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
                <order field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[ENTITY_DESCRIPTION_SHORT]' />
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[WAIT_TIME_MAX]' derivation='Max' name='[max:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_DATE]' derivation='Quarter' name='[qr:WORK_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[WORK_DATE]' derivation='Year' name='[yr:WORK_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:max:WAIT_TIME_MAX:qk:13]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[max:WAIT_TIME_MAX:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[Exclusions (Entity Description Short,YEAR(Work Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
                <groupfilter function='level-members' level='[yr:WORK_DATE:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2019' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Aeroplane Ride&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bumper Cars&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bungee Jump&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Circus Train&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
                  <hierarchy name='[yr:WORK_DATE:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Aeroplane Ride&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Crazy Bus&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Gondola&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Log Flume&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Monorail&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Pirate Ship&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Power Tower&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Reverse Bungee&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Scooby Doo&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Skyway&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Sling Shot&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Tilt-A-Whirl&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Vertical Drop&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2019' />
              <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[Exclusions (Entity Description Short,YEAR(Work Date))]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]' value='33' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[Multiple Values]</rows>
        <cols>([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk] / ([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok] / ([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok] / [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names])))</cols>
      </table>
      <simple-id uuid='{482ABFA7-7372-41A7-A32A-DA8AB8D3AAC3}' />
    </worksheet>
    <worksheet name='QOQ Analysis Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run>QOQ Analysis Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='waiting_times' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5f4z10hhf1o113x7k8r0oknzpn'>
            <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
            <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
            <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='Median' name='[diff:med:WAIT_TIME_MAX:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[WAIT_TIME_MAX]' derivation='Median' name='[med:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_DATE]' derivation='Quarter' name='[qr:WORK_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[WAIT_TIME_MAX]' derivation='Sum' name='[sum:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WORK_DATE]' derivation='Year' name='[yr:WORK_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:med:WAIT_TIME_MAX:qk:1]' included-values='in-range'>
            <min>0.0</min>
            <max>95.0</max>
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bumper Cars&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bungee Jump&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Circus Train&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Crazy Dance&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Dizzy Dropper&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Drop Tower&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Flying Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Free Fall&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Giant Wheel&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Giga Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Go-Karts&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Haunted House&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Himalaya Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Inverted Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Kiddie Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Merry Go Round&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Oz Theatre&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Rapids Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Roller Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Spinning Coaster&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Spiral Slide&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Superman Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Swing Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Vertical Drop&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Water Ride&quot;' />
              <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Zipline&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]'>
            <groupfilter from='1' function='range' level='[qr:WORK_DATE:ok]' to='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2019' />
              <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:med:WAIT_TIME_MAX:qk:1]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' value='46' />
            <format attr='width' field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[med:WAIT_TIME_MAX:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:med:WAIT_TIME_MAX:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[sum:WAIT_TIME_MAX:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[med:WAIT_TIME_MAX:qk] + ([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:med:WAIT_TIME_MAX:qk:1] + [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[sum:WAIT_TIME_MAX:qk]))</rows>
        <cols>([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk] / ([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok] / [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]))</cols>
      </table>
      <simple-id uuid='{D47023A3-C10D-4839-8B01-FF55FEDE02D0}' />
    </worksheet>
    <worksheet name='YOY Overview Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>YOY Overview Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='waiting_times' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5f4z10hhf1o113x7k8r0oknzpn'>
            <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
            <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
            <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
            <column-instance aggregation-param='95' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[prc95:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WORK_DATE]' derivation='Year' name='[yr:WORK_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[Exclusions (Entity Description Short,YEAR(Work Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
                <groupfilter function='level-members' level='[yr:WORK_DATE:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2019' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Aeroplane Ride&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bumper Cars&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bungee Jump&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Circus Train&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
                  <hierarchy name='[yr:WORK_DATE:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Tilt-A-Whirl&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Vertical Drop&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' direction='DESC' using='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]' />
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2019' />
              <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[Exclusions (Entity Description Short,YEAR(Work Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk] / [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok])</rows>
        <cols>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]</cols>
      </table>
      <simple-id uuid='{CCE16B25-FC9B-4241-AF47-2528500F7AF4}' />
    </worksheet>
    <worksheet name='YOY Overview Analysis(Comparison)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>YOY Overview Analysis(Comparison)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='waiting_times' name='federated.0u5f4z10hhf1o113x7k8r0oknzpn' />
          </datasources>
          <datasource-dependencies datasource='federated.0u5f4z10hhf1o113x7k8r0oknzpn'>
            <column caption='Entity Description Short' datatype='string' name='[ENTITY_DESCRIPTION_SHORT]' role='dimension' type='nominal' />
            <column caption='Wait Time Max' datatype='integer' name='[WAIT_TIME_MAX]' role='measure' type='quantitative' />
            <column caption='Work Date' datatype='date' name='[WORK_DATE]' role='dimension' type='ordinal' />
            <column-instance aggregation-param='95' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[diff:prc95:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' ordering-type='Field' type='Difference'>
                <address>
                  <value>2019</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[ENTITY_DESCRIPTION_SHORT]' derivation='None' name='[none:ENTITY_DESCRIPTION_SHORT:nk]' pivot='key' type='nominal' />
            <column-instance aggregation-param='95' column='[WAIT_TIME_MAX]' derivation='Percentile' name='[prc95:WAIT_TIME_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WORK_DATE]' derivation='Year' name='[yr:WORK_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[Exclusions (Entity Description Short,YEAR(Work Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
                <groupfilter function='level-members' level='[yr:WORK_DATE:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2019' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Aeroplane Ride&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bumper Cars&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Bungee Jump&quot;' />
                    <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Circus Train&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
                  <hierarchy name='[yr:WORK_DATE:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:prc95:WAIT_TIME_MAX:qk]' included-values='in-range'>
            <min>-45.0</min>
            <max>60.0</max>
          </filter>
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Tilt-A-Whirl&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='&quot;Vertical Drop&quot;' />
                <groupfilter function='member' level='[none:ENTITY_DESCRIPTION_SHORT:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]' direction='DESC' using='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]' />
          <filter class='categorical' column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2019' />
              <groupfilter function='member' level='[yr:WORK_DATE:ok]' member='2022' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' direction='ASC'>
            <dictionary>
              <bucket>2022</bucket>
              <bucket>2019</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[Exclusions (Entity Description Short,YEAR(Work Date))]</column>
            <column>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:prc95:WAIT_TIME_MAX:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:prc95:WAIT_TIME_MAX:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk] / [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok])</rows>
        <cols>([federated.0u5f4z10hhf1o113x7k8r0oknzpn].[prc95:WAIT_TIME_MAX:qk] + [federated.0u5f4z10hhf1o113x7k8r0oknzpn].[diff:prc95:WAIT_TIME_MAX:qk])</cols>
      </table>
      <simple-id uuid='{D9AB1841-78E0-40B1-9566-425A50505A28}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Overview'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' name='Park Waiting/Up/Down Time and Capacity/Guest Carried Overview' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='9' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Park Waiting/Up/Down Time and Capacity/Guest Carried Overview' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1C809073-1AC9-4AFF-B244-98C4A067B272}' />
    </dashboard>
    <dashboard name='Sample Dashboard for the Park Management' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sample Dashboard for the Park Management</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='5187' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='6017' />
            <zone h='82676' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='16494'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Overview' captured-sheet='Overview' id='2' />
                  <story-point caption='Yearly' captured-sheet='YOY Overview Analysis(Comparison)' id='1' />
                  <story-point caption='Quaterly' captured-sheet='QOQ Analysis Comparison' id='3' />
                  <story-point caption='Monthly' captured-sheet='Monthly Analysis' id='4' />
                  <story-point caption='Daily' captured-sheet='Box Plot for Waiting_Time_Max for Every Attraction for One Day' id='5' />
                  <story-point caption='Hourly ' captured-sheet='Hourly Analysis' id='6'>
                    <capturedDeltas>
                      <worksheet name='Hourly Analysis'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{676B4717-38B3-47C4-8481-A8162803014B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Park Waiting/Up/Down Time and Capacity/Guest Carried Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[dy:WORK_DATE:ok]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D953C1D-0794-4A08-AEB4-B7498F071096}' />
    </window>
    <window class='worksheet' name='Box Plot for Waiting_Time_Max for Every Attraction for One Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WAIT_TIME_MAX:qk]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FEF4BF83-64C8-45EC-BF39-E6D9250BA580}' />
    </window>
    <window class='worksheet' name='QOQ Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA533D05-D44B-4BFC-BC7E-1D6B5EC9993D}' />
    </window>
    <window class='worksheet' name='YOY Overview Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E42E32B6-ACF4-44A8-8F94-81BFBD8B9417}' />
    </window>
    <window class='worksheet' name='YOY Overview Analysis(Comparison)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' type='filter' />
            <card pane-specification-id='4' param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7F583B2-18DE-4355-BE4A-2670C8669BD2}' />
    </window>
    <window class='worksheet' name='QOQ Analysis Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' pattern='2022' type='highlight'>
          <color-one-way>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[:Measure Names]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>2022</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B65FEDC-AB1B-4D9E-A7B6-A0DDF9857935}' />
    </window>
    <window class='worksheet' name='Monthly Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]' type='color' />
            <card pane-specification-id='1' param='[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[cnt:WAIT_TIME_MAX:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[dy:WORK_DATE:ok]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WAIT_TIME_MAX:qk]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:WORK_DATE:qk]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[qr:WORK_DATE:ok]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{18EEFD3C-0FA7-423F-87F7-7B96780D42EE}' />
    </window>
    <window class='worksheet' name='Hourly Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[none:ENTITY_DESCRIPTION_SHORT:nk]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:DEB_TIME:ok]</field>
            <field>[federated.0u5f4z10hhf1o113x7k8r0oknzpn].[yr:WORK_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54FD7220-30A7-4A61-863C-E5E3D48E692B}' />
    </window>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Park Waiting/Up/Down Time and Capacity/Guest Carried Overview' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5FAAAFA7-AD2C-44F9-B8F7-4FAD8DB82DC3}' />
    </window>
    <window class='dashboard' maximized='true' name='Sample Dashboard for the Park Management'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{3B324034-3E2E-48A1-9FB5-A61788883097}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Box Plot for Waiting_Time_Max for Every Attraction for One Day' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hourly Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29WXRj13nn+8M8DwQxkATAeahijZIlS7IVRXZsdxIrdqyOYzvTjZ1E7nXX
      vXm66z5090N6re7bK53bva7tONZgJ7ZsWZMnOZIsR7NUJakmVrHIIglOAEESAEGQAIh5PPcB
      JIukOBMcynV+a3nJBey9z3f2xsez/+f79t4SQRAERERuU6SHbYCIyGEiOoDIbY3oACK3NaID
      iNzWiA4gclvzG+UAkUhkR+Xz6TjxdH6frBEBSEQjZItH90XjKgdIzvp5/PHHefyJJ3i/Z2DL
      yvMTffR4gh/6vOdqz+L/K/Lzn/9y+fPe3uvrtnP+/HsADPRep7j4WWB8gPFAdBu3sIhQ5N13
      36P3+s1rzPqHCUSzG1Y59+abCMUkjz/+OE888T0u9A5t/3pb8MrPn6705eL/ZpNFzr93vmrt
      b0R+foK3ezyrPuu/fI4nnniCD65V5/4Grpwnmq38XrYaozffehe5TEI0PMWPf/h9fvjj5whE
      Yru67vhAL8nimg+FMh+89QpPfPef6R/x76i9gSvn1zrAJM4T9/M3f/U1op7zXPPNU8im6L3a
      w1So8tc1OhsiXyrjGR4hn1ogmqz8wCb9k8vt9F69hgAs+G9w9doAgWQJymn6bowAEPCPcbW3
      n3ypDEB7WxuZRJRXXv4Vl65cwR+YpcZWT61JRyYRJbqQpL/3GvOJdOWehRKeG9cZ90+STGYA
      mOr/AOeJe7je17dsx+zkCMFYlvhciLm5Oa5dv0GxvPTXqEwsB+ZyHCxt/NXX/oLsVC8/f+0C
      APlMkmtXr5HI5AGBYDBUaTPgJ56qPDVCoRCJ6CwLyTS9166SWPE0+d0vfIVH/vjTaJwneOSR
      R7Dp5bS1tVfqzcwwPTGGdypENhnn2vX+ZbviczNcv+GhvOKPplAuMTzQx+CIFwEoZhJEogsM
      9fcSnk8slWLcM8Dw8DCz0eRy3atvvYhnXsrX/upruGzGdft/JhRkeOA6ocUfplAqMnTjOp6x
      ieV2FubDXFusU9/Yhk5Zpuf8G7z+1nn6BkcJTU+z9Ic+HAhSFEAopijJtBTjQf7lmRf57MNf
      5t8/9Cmy6TQUM4Tm4pU+Dc1QrtwowwN9BBftKJfy9PdexR8IU8wkeP2Vl3n/0hXG/YFlu179
      +VNk9Y381Vf/nBq9EgQB78jQzT4s5wnNRomEppiLpwjNzJBNxpmYDlHf2Lb+FEgildHSWE8i
      kaH36mUy+RJv/PLHjIZT9Lz9Kj946odMzi7c7OTzv8YbvtnpbVY14/M5LveO8jdf+xxXewaY
      Ge6lrusOCokwl/vHyKejPPnjnwLw2quvfciG0HAP/RPzhIZ7+MajT5LI5njyBz8E4MnHv4V/
      doH+d1/igqfyw7w8EuauTsd6t0P/B6/ys1ffJxUN8p3vPVXp9LEebG13LJeRyhT89me/RMw/
      gFBI8o//9AS5fI7vfvtbxHMCr7zyKwDe+LcXeP3ti5QzYV4/d43hnrd59Mnnyeay/OCHT697
      /eXBeq1ynz964h/pH5nkhR89xnMvv0Fidoyfvvwe0akhnvrFayTnpnny2ReW602ODjAVWSA4
      2sNLb/aQDA3zD994lEgiy/ef/AEAL/z4Xxj0hwmHw6uu2euN8O8/8zFkUhkuZ8O6/f/oN/8H
      4XiGn/3gMcbDSbyePkLRJP6B9/n1ewPMTtzgX559iVw6xrg/RM/brzK/ZuYYn7zO21fHAXjp
      168gl8CNC+fo/ujH6Tn/Fg995S8x6dRojRZaGxsgGeLVD/oBePvV18gDLzz7JJOzC7z2sx8x
      ElzgJ0/9gGg6T/+ly2Q26NPphRIP3tWNVKbAWV9HNODF4w+RiPh59oVfQ36ex/7pMV55+yIA
      v3z+hzz5zM8plaHn7VeRr23wzV/9nKkb76KrcfKVjznpebef3iEPqdkwE5NhoMh9n/wCJ11m
      QgPnefWFH3Hy7L382cPHl9u4864z/LqnHyEv4G46xvsXfkZPuMC9n7sXIR8lMu0lNCVhaja1
      XEdjqKHR5eKOj3wENeBdMbP69EMPc193HeOjw8ACKmMnn37wfkIDEm5kQMgvICiMmwqaT/3u
      Q7SYwTtVcYAPrvv53T+8C+LeVeVkUgmBoR7OfvJh7rmjCbe+QM/AJFatgmg2jcrSQSkzw+CV
      OKfu+S0Kw//GQw9/ie46NaPD45tYcBNHyzH+3aceRB6b5MRDX6BOHeOpH57n0nkPuXyR/qFR
      hv1h4PMAyGUShgf6kUpLlOUCNLfwwKcf4v77uvGOjwKQkWr58qcfJBsa4MUbN38uEolk1bUF
      ifxD/d9+4k7uv+8ePtpm4he9g9zTqGDoRh9SSQ5JzEvOF+UvH/kqJlmljekrAFI6OzsoZBo4
      dbwFhCbe+d6PuM9dxuDoBGB4JsXDH9fzZq6AWq0kGhjn+RdfoSy38x8e/siH+uXqtas0LOQp
      Z1N8cLmXU+2tvHP5EjZnG1q1gdZGFyfu+Ah16pt1JGsGXaqQ4R8dAomUWF4CnMHkaOHPvvQw
      ALmSkv/9r/4SmQS8F9YRwZ/4vS/w9Ue+zp998SFkErgxHuDrjzzCH3z6/sUScqxW83L5T332
      i2RnRphL5pY/0zccIxPoRSLVAFKkUoiXpNQoJVx481c88PBX+Zu//hrOWv1q44USxfKH+mUN
      WubCo6TzRSb8lTnf1ffOcfZjH69cW8gyGa1MlUbGp7BbdMs1hXKBRCINpQwFiQbF6t8Gc9Mj
      FFU1mG12QpOVx//ExDS1tSbuvaOTXzz9HK4TH0UlgR7/Aifcxq2M3RFms4lPfvaLPPLII/zX
      //x/LX/+6rlLPPL1r/O//ekXUcnWr5tMJhGAUqm06nOLuszQVGX6Wi6XN+1/z9AwDfX1vPX+
      Vb7+9a/zF1/5AgrAXqPGNz0HwMrMGYlUQrGwOCmXKGiqUfDUv57nwQfvJb8QQGGoB+DUnWd4
      9VevUtPQyiOPfA2DApBIKC/amslWHNbdfoq/eeQR/sPf/t988dN3c+yOj/O3/+f/Qbt+gd6J
      OBKpQGHND0SWSxGKpZfv799eeYs//euv89df/QtMGgUAtVbrzT621iJbMe6rngBKnRFLSbfy
      I1y1Oh7/7ncxqWV03H0GbA6U0hXlZSYe/Oqf87OXfs0fPfw5pBIAGUZ5AeeJOwE45rbiiVUq
      nb33t/jB04+jM5gx1lamLHZH5b8ff+Auvvetb3H3A5+iRV+DUa1ELav8F8BhdwByvvjw7/HM
      D7+P3ahAY4PxuTR/VKsB4LNfeJgf/uj7FJBQ13wSt0mBH/jZU99DQ45P/P7DDF54l2N3f3yx
      B9QEPJd5/LEx1MZa/vSPH0Ylk1Anv8Fjjz2GpaGNLzaaQThL+CdvcabVglto5aWeEDJAX2ND
      vdghS/dxs3fVOCw3ncThsK+4D6hZ7ks5doeFuz95lh/94Ek+KEow1zfzpc99BoB7T3fynUcf
      o9Zuo67Ohlytx2JUr2rz/ju7+Mdvf4canRz36QeWr/nQH32Zp5/6Me/kiljdXXx6nf4f7bvE
      44+n0dW6+ZMHXJjTLXzn0cex1tVQ53Bxz+98hGd/9CQXciU+/qmHlu2uaTuD77Hv8uzMcb70
      +c/wyd/7DP/tG89i1cp46+UL3Pfg5wCwNp/h9ESQf/rOoyhkUk7f+wkwOiH4Iv/8z6MkspW/
      xJ+47wz/9O3vIJdL+e3f/UOio5e5PjaFTGnkzz9lIqt5gO9/71ucuvsBPvmxyvT1j//kT3jq
      x09SEKS0dN/B/fd/hH/5zncwWqzYHXUgVeKw1dwcA/vNMaqxOUC4BXn1V78ULl68KHz7f/69
      MDQyIPzr65c2LX/uxSeF8ejNfz///PP7bOGtxY9+9OSe28gmY8KLz/1AONfnEwShLDz//E/2
      btgBIBGEWy8bNLUwj2fUh7ulndzcNAZ3FybVxgogPhdCaapDIweEIgODY3R3dx2cwUecmZkQ
      DkfdntrIp+J4Z+J0tTZSzsXxTCY43u6qkoX7xy3pACIi1eI3KhIsIrJTbikHSKfTh22CyG8Y
      t5QDrH3FJyKyV24pBxARqTaiA4jc1ogOIHJbsyoSnEgkNip3JNitCC6Xy0ilO/f1ndbL5XKo
      VKodX6fadmzGXmzcix07qbtdG7fb5mblVjmAwWDYloHrMTLUT1GQ0trRjWqx1XQigcpgYG36
      yohnhI6uDubDAWbmFzCaraQWojS56kBlQCWDkeFhOjo7V9X7T0+8wURko7zA6vBf//qTnGqt
      pBcUi0Xk8g/lC27Kn/33l3jh//lyVW3ajR0b0TceZiKS4Su/c/JA7dhJ3aVxPtli57/9zSf3
      3OZm5arTq0AykcDe2IkqG+SNG7MYFAI2vZYGSZJfXRjnvrPHmY3MUhJkKBeTkbKZDMUy2G21
      eBeiJMNBBKuE655RcrkcWuUIsXQetc5MW5OzWqZuSSYb5XJwiPvcd+OdvUGqkMVq6iAcHaQo
      0XCn8zQAA4HLpEtS7nTfKc4lb1GqNm5n77oX4pNMx/I4G1sx6m4+wjq6TyNkkxQFSKVuTrPq
      G1vp7mjh+oqVYvmFWWzNx3FYa5ibjyGXyZFJ16Rt7jMadQ1WbSWJLZ1PUUYgm/JRVjZikZaI
      lwHSFAQ9rVoZ05m1y5REbhWq9gQYHxkiX9bRaVLyVv8oXc0N6JUyZEoltXoVRpmJcCKDzWbD
      qK1kbsbnZgjNxXE1NiGXlNDIKusCpkeGKEpVdHV1MOYPodVWMlRb6s27mqYJgvChvPiN0KkV
      q/6dLQmcrGtnKDwIcgMFQaBSQg5CgWxJQCW7+XfkZIt9x/YdJDq1Arv5aD+vlsa5pd68deE9
      Uv1coHyCSE6F1aCsarNQEem7cYCdzl2TmQhDs2OYNA708jJzmQXc1uNE42MUJFoa9VqiZR2F
      zDTJkpTj9vY92Vdt+zdjLzYelAbYro3V0AD7ngx37cpFNGY7XW3Nm5bzjgyRL0uoczZh0ldy
      3YdHhulsqmU4AJ3Ntfzt/3phRyL4y79zkq/8zsldD9xO6yUSCf7sv78EUFUhXE0HeK93jL9/
      9tKu7DsoB/jb//UC951p21KoHykRvBHpTAZdjYTBvh4yJSV6NRQKeUyWeqYDQVRqNWdPdZPJ
      ZJCptEilZUaHPCQLZbTqDZY/iYhUiX2fDNY6GuhobUKu1nHn2ZPE43HkSi2FeIBMWY5MVvmR
      K9Q6urq6UBXixHJlkqnUFi2LiOydfX8C1FosAFgstQB0tLcTmo1haeymNO1DoqoIXEtt5XuF
      rgatIoZRb6XWbACZhtpFLbRTEWw367YuVGVuBRF81G1sqTcf2NjdUgtiDkoE77aeKIKrU/cg
      RXDVngAro7rOOuuq7za7obnJCQLpLFJBRnujY8+R4K2ih/vN5//jM5t+vyTMD4u+8TB//+xL
      G35/2PbBziL+e7W3ag6wMqo7ODgImQiGxjMkIrPIpGVGhwfQKGTo6toIT4yRKpR44GP3kE/n
      aensZPx635GJBIvcPlRNBK+M6kokEjQWF+HBi9S4GgHQGWs4dqyFTHQWna2ZuuWtKopcu3Ae
      mb6iFY5CJFjk9qFqT4CVUV21JEdOqqVUKlOnV6Corfy4kWmodbhYiPjxhebo7OhEX2vno13H
      iUz6UegsaEyWPUWCDyJ6uBlbCczDEOYr2UoEH7Z9sP2XHYIg7NneQxDBZcaGh5GoDbQ27mxa
      I4rgvSOK4NXsuVcnfaOkcyXMtQ60Ktn6hhcW8IYKtLhrmfJN4O44Ru+lizQ3OvH7fOQKBbo6
      Ota/QH5uORL8myCCt6LaqdRr2UoE74T9svUg09737ACxZIY6qwWkEgKhEC6hyOR0EKXOzMzk
      KFJUtHZYGR4O47B/FJtJjj8wh1rIE4jMk8lLic0GuRCep63DhX8mhlqpppyNk88X6TzeCoga
      QGR/2LMILpfL2OqchAJTAMyGw0ikMhKJBSz2ehqtFjTmGpyuZrQqGaoaJ3NDF7Gf/Cj+axdx
      NLqWywXn5pAr5MjkMuLxOFqtinxeTDUW2T/2/ARw19sZ8niwORqQS8vIhQLh+QQ2Ww1KmQSV
      AEqlGWV5kHTOjlYlo6axDYdOyUJTGxa1lLLFgkoAi1nP+PAYOq0Wc3s7sYUUGq2B2sW3QL8J
      Iviw2UskeCdp5XthJyJ4O/asV24p7V2MBFexniiCq1P3lhLBO2HpaJpYIk13V/uqmxzxjNDo
      vrkmeD22EkdHIYq5UgQftiBfj7Ui+CjauNE474etB+oAar0JozqMydZBKBAkIPiRSuXky5V1
      wslwEBokXHi7H5VRhcuqFyPBIvvKga6NK+WTzCahzrJ4MolMSUdnF3LJaqFb72zCYtKKkWCR
      fedAnwBz4QhyeRnfZABLrYXIbBCPZwhbnRuhkK3s3y9TYqnVg0SBvsGxo0jwUYhirhSYhy3I
      12OtCD6KNm40zvth66GK4MjcHNbFdQDbQRTBe0cUwavZ1ydAfG6G6XAUtdZA65o5/NzkFDq3
      k5GRUTo62tfULOD1hmhpca/6dDMRfFTE3G4jwQcl4KsVCd5Pe/c7Erwygr2vDuAPztLW5CIc
      SzM5PkwiW0Ku1tHZ2kg+nWDo0kW6j59lLhwkNDWJtamJnktDdHc3Mjw8jlqSZSpeoK25EYtJ
      v/UFRUR2yP6K4HIJtd5MMhYlmS3R3X2cYmaB8REP+ZIcp6uO+EKCcHgGmaRILJml7dhJmhqd
      uJwu6hqbMSohGovvq5kity/7+gQ41tnG0OAgGoMJp1XHwMAgDY1tmA0aEpE5VNZaItPTqMxm
      UiklZpMJCUpAiVpZZn4+DhIpJlNll7bNRPBREXO7jbIelICvViR4P+09iEjwEmIkuIr1RBFc
      nbpHWgRfufgecoWGzlNn0cgrXuUbHqGhs4mJ4QAdnc0fqlNIxxkYncRis+Ou3/ivT2EhRKhg
      wr146PVaNhNH+51GvF0+/x+fOTK2rEffeBiDIbO8A/ZRZGmcD6Ifd+wAxppa9NIC8XiMPu8E
      EqkEm167/H1vzyXyRQkOo47JdIY7T57FO+7n1OlTSIG+3itQLlPf1s18YIpMSUBeyiBVm6iV
      LTAcDlGuM5JIZ1BpjcxMeHC2naDFXV/N+xYRAXYhgmemvNyYSmAmjrWxE71aQXnF9/F4DK1K
      Tr4o5/Qdd6JRSlFIIVuolJIptRxvdzI55iVZFEimUrhdTtKxedSmGlzNbSTiURRyOTKpFHtD
      k/jjF9k3dvwEOH76LnQqKfG8HCHmR2OswaxRIkOGpdaMTtPBQiqPpdaCalF3tB87xrDHg8Zk
      odaoYySQ5tSJVoZH/RhtNjKZLFpTDXpLA+XBYZrbO/BPBjDrtMgX9wmF3e8OfZDcCunQa3fA
      Pmoc5DiLIriK9UQRXJ26R1oEr4d3ZIh8SUChNdHa2LBp2Vhkhv6hYepdzbQ1uzctu5ZbRQSv
      5ajYBhtHgo9KJB1Wj/N+R8ir4gBFQUrXsU4GBm4w2BciU1Ji0srIlQTUOjMzkyPIZWpO3X0P
      ZquDGnOYtmY3g329CJRRq9VgaGCs7wodTfWUFSrSoggWOQCqGgkulcrLu0DnStB9/DiZRIxa
      ez3NdSbShTUVZEqOH28nW9YSG71CvdNJpCAlLYpgkQOiKk8Ag06Nx+Oh3t2MpJQDoLHOxsDg
      EI2tHfRdPofU1Ub7op612StC0VZrZGgkQEdXJxPyAm3NTsb98zTW1TPiE0XwfrBRJPioRNJh
      9Tjvd4T8QETw3NwctTtIe94IUQTvHVEEr2ZXd1NYCHF1fB45Jc6ePbXlPGqjH39o3IuptYX1
      474f5lYVweux8jzig2Q36dAHvdZ6N+nQu+3PXTmAUMiSLZRRS4rM+4aRNHQSHOmjmM+iVslR
      mxqZD4yzkC/R3VzHTCyNUq0jGw+TL0o4c/ddKCWQTaVRzvmYoYFEcARJMY9CViKSUaDVyJGX
      ciiUSlRGKy2uut2YKiKyKbsWwY2tHZjkkFkKAwug0Zs51t1BIT6Hzuyk3l7L3Nw8CrkMuUy6
      IkpcqVJEWHGKvIBKo6erqwWb3YVOrUClNXDs+DFy6eRe7lFEZEN29QSQaczEvV4UGgP1Tgee
      0SGUWgMWkwFQYrHXk4gHGZsK89v33sHwmB+tVkt7eyVKrJLBXDiIoDNgNNcxPTSKXKnFYjHd
      PBKpVMu038fg0AjN7V3Ab5YIPqxo7G7SoQ96rfVu0qF325/7JoK9I0OUFbodB7tWslY8iyJ4
      74gieDVVWxDj9XqpM6kZmS/i0pSxNHVhUla80zvupaW1Zd161Tgi6bAE5XpsJYIPW6xvJYIP
      2z7Y+5rgnUS1q+YAmXSaQKmEGphZKNBmSeHxTCHIlATGR5CrtURnJikUBOpqDYzOpbnrzGnx
      iCSRQ6VqkWCNXEq6LKAAylIps7MzCEhIJVLYG1y4GxzEF+JoNAryBTh55k50KjniEUkih0nV
      ngCN7np883mcZgWBhRI1OgmJzBw2mw29UsAfmKGjvZ1YIkONzYZy8crVOCLpKKX33qqR4KPE
      XtcE7ySqLaZDV7GeKIKrU/fwRbBQoL9vEKlaR3dn27YM2+y7/V4TfCuJ4K046kckHURU+OnX
      +3nkD+/b12sssYEDlEgk0nQ2teLzDJCRyikWQS2DucAkaYmccgkK6Wjl7N/646RjIdJD/ajk
      UkyNxwiMj5Ivlfj4vR9lRFwTLHJEWV8ES1Tc+7F7mPQMkpcoaOvoRCFdnClJFLR3dqKSrTj7
      N5UFQG+20N3RSHxuBrOzA3utCUBcEyxyZFn/CVDOMzQ8js5qR5FPMeIZwuFwIinlkQEywLIU
      oFqM3AolCxIEUKqw11uIB8eZCsfo6Nj/NcGiCN4+e90Y6yCiwgcZed5SBMfm5jDU1rLBoS0b
      UGRkaAyFzkCze/MlkjtBFMF7RxTBq9mw9lKqsnkbefyTXi91LS3c/Dssp+NYFyMjHkAUwUsc
      hSOcNhPBR8E+2DwSXO2x3tABsqk0epK880bluCKTRknHsTaGh30kFxJIVGp0sgKZkpL8QoSE
      IEWRT5Av5DHbGwn6/aTzOTo6EEWwyJFly0jw0nFFrY1WPnj/Ok6nhVimjFwmW17/a7HYaGtt
      IhaPI1dqKSdCmJwd1Nsr0V1RBIscVTZ8ApjtNpTcPK5IabDiqEtgNNrpcEXJS1RYzJU9+5ta
      nIyPTtDR3k5oNoaxro38tI/sYvOiCK5wFI5w2kwEHwX7YPNIcLXHWowEV7GeKIKrU/dIiOBN
      EYqM+wK0Njvx+qZpaWlc9fWSKM5ucCPDI8N0dnQury1WySWcPnmcrVLe1hNHR0W4LbGeCD5K
      Nm4kgo+SjTtJh96r3btzAImcTDpBdNqLymzn0oVL64pieSlHMR1nMrKAy+VkPhgiWSijVVde
      qgqFLHZ3O/biFD6flxtjAe5obyAUTyOTSJCVsuKaYJF9Zdfp0HqFlPFYgQZNfkNRDDAfS3Ls
      +HH0pInlyiRTqQ+1lczk0ahkdHSfRpLP03bsOEqpIK4JFtl3dj2xbGxxk/XHQG2lwzW3rii2
      W2qxmPUMeYZwOOxoFWDUW6k1V6ZFlbXF4whGIy21BuQ5FVZHKx6PB1Otg7ngxJZrgo+KcFti
      PYF5lGzcSAQfJRt3kg69V7sPXASn02m0Wu22ygGryvZ6/EgV6lXl7DU6HDWbd8JBimDf7OZz
      15Z6M3qNcl/t2IxgeI5IsrRpmY0CTQclgtcb5/Uol0ucad/6Ffm+rwm+/MF5tAYDWlM9ekWe
      olRLjU5FJBrBVFtHeiGG3W4j4J8gFE3Q1eIkspCnyVVH0DPIDFIKqRzdzXVgsJOLBhkan+Zj
      99yBz+vD3dyETCLhey9dPfIi+D9/941Nvz/sqLU3GOPvn720aZnDXhe83jhvxF5trdqSSKlU
      ikwmpVAo0nu9l/lJP3KzHe/oMPFYjODEGEqzA61KzvDwCBqNalV9hUJOdiFGKjHLTFKCxaxn
      eHAAq8OGxzNWLTNFRFZRFQcwWWxISkU0WiXhuYXFQ62lqFQyJJLKJQrFEnKZhFw+T3vnMSaH
      h8kDIMdhq0EqrwQ4yuUiEpmcXDZLMZdhbNyHSr3dzRNFRHZGVaZATpcLrVZLLBaj3l6DoNRT
      jswwNeGnvbOLciGHVqPBP+GjpbUdChkcza0oAYvbiVyrxShXIZErMKq1SPNT4G7GVqPHO+6j
      rt4BwCfvbCFTWu2zRy39+MtbTMfsW+iV/cZeo9vSxsNmvXFej3K5vGWZrdg3EZxLp5Frtctp
      1KVcmqJci2pnedWruNVFsE6toLWhZt/t2IytRPBmNh4VEbw05gcWCZ7zDUNDJ3lvP8rmblIB
      L2a7E7mkjFarIpUsUMgnSGTLGErzfOBN8eB9dzDt81LvbqaUSzDa30Nt94PU65OMeBJ0tCjp
      9+Zx2+TkBAVGjRKlVksmmaJczBJLF3HXW/H5Jn9jRPBROIZoKxF8FGzcSgRXc8y3qQHKeEc8
      +KYCIJQplsr09l5namoayODzhhj1TpCNR9HVmHE2thDyejBaHQx7PIyOTeBqcCy3Fpjy4Rnx
      UhayTExHWQj5GZuYpgj4vF5GRkZQq1WiCBbZd7bpAFJaOrpodjWQnPEh6O1o1ArKpRKphQWK
      gNFoRCGTIcjkCIU8xUKOsbFx5Co1ApDLZZdba3A109XRsuriUqFMLpclmcnT0XWc8WEPeVEE
      i+wz25oCGetcIIeyuwWpWkNgYoLOzk4UFJlLpGlvqUMiLSMF5BottWof1pbTKPxeLHX1SItG
      YokMVg2ABqdbAXIpLY16itkFcoICm1mL1x+ku7uTcj6Du6WNepv5N0oEH4Vo61Yi+CjYuJUI
      ruaY71oEbzeiW01udRG8W8rlElLpzbcHewmkbScSvF07NmK9MdmvSPBae9brm6pFgpNBD30z
      0FRfS3Jhnob6BvR6PclUilQqhV6rIhyJ09zcSCwyQzJPZU/Q2QDjwXmsNjtWg0TnC80AABmd
      SURBVIq5RA5XnRW/b1FMl7OEY2m0+TB9Ybj/7tOEJidwNjWTz6RIZ/JYrZZbXgRXi71EP7cT
      Cd4rex2TnUSC17LTvtnVOy2ptPJ4Ckz4cDbaCc5LKOfjBKfidDXaGPUHyGaKKIQUNDiYnJnj
      jtOnALh+/TpuqxZ/WLUspo1qCQ53G2atGZfWytToIHZ3Cx7PCNHwFGfu/vhuzBQR2ZIdR4Kb
      27uos1XW+ra3N/HOezdoabQBoDMY0KiVlIoFpDI52WxF+Fp0SgKRBTKZm16dmJlYFtOtHV3M
      jA+Tlcop5XMU8hnGxr0oVWrs9W4MWtWHDRERqQI7egJoLG4UizVcThdSpRpnvQ25BNzOxf37
      VTIanRIigWmm85VIXUNLFzMBP0mpiY7WJuYSOU6camXCVxHTklIOi7sFY40d44IP+4lKDMHe
      UI+kfPN07VtdBO+Wcrm8/NTdK3uJBG/Xjr2OyU4iwXvtlz1FguPzsyj1FjTKtcJIYGrCh9Zs
      W8wL2gtl0uk8Wq16XXG0HUF4q4ngtSnTB50OvRFLonM3Ee2DEMG7SePewqI8L/ziNT7/h7/P
      tXdfRtP+AFZZApnGhFIG+bIERTHH7EIKjVqDXqcmlS6hURQIRWLoMzk0mk5S0RAyjYkaow7P
      YD9IFaRyRc52d+CbDNLc3EQ2k0ZaFpAqJERjCRRqHWadEu+El0JRxbGu5nXF0WGn7q6lGiJ4
      P1OmqyGC9ztavFsRvJvfwpYu6arVE4olkSk0CNl5pvMgDY8jKeUw2NyE/DeoaWhhxufFblAh
      sbaQnPDRfOIM0bHrJGMhImkZhZlRzKfPLLerkCsYGhqita2NQc8ocpmAKptHbZUTK9chBKeY
      KRVp72plfCy84xsTEdkOW06gjA43Y1fO42hsAkFgetJHvgRKjYHGBjtqnRlXnZUmu4kbwTQ2
      nQKzw8a0bxKbUUk8U2LVHEuuwlajR65YesRXvi2XSiQSCwCYTCakMhllQaBcyFG6ZTZuEbnV
      2OIJIMfpqsfusGDQqtCXFVh1CopSDUZd5c2M010Rv7oaKzZTJcNfZXTQUpolsiCjtdHFfDiA
      rLYdCRWxrNVqkatiaHUN+CeDHO9qZz4coGCqxWLRIcjB5HSilMH0bJTmxsqOENsVR4dJNUTw
      fqZMV0ME73e0+JYRwSuZDc9gsTmQ7eN5dmvF0XbX1x4VEbyb9cC7sWMzNhLB+/kyYad1l8Z5
      q/46lI2x+q/1IFdrKEmU2GsMGPQaJiYDWKxWxoc9qA1maox6NEopeZSkAyOMpySQyXD2VCep
      TL5yZGpoCpuziVI2QXguQXOzk9lgEEGhw1FrZMK3dST4sNfXrsdmIvgo2LuRCD5KLxOWxvkg
      +mvHDqDSGOjo6mBwYID5eBmb3Y5JI6MkUeJ0WJiK5on5vGjlUlwd3YCU1o5OpKEBJiYnCafk
      1GuC1DhbGB4ahHKRjlYXo14/6XgalWyeaESKU4wEixwAu5pAlQrZ5d2eC+kYc1kZdTVahidC
      dLY4qdUpiRakN1d/CQJTkQw1Gmhpa2Plsb9KlZpyqYRMIUelVgMSSmIkWOSA2PETwFZrZNwf
      5PSpE+SyGQqlPHIhT3h2Do1ayWRgBrvFQEJSadpY18D4xAgtx06ikZUoykHVcYxJn5fOY8fx
      9PcQSZpoddl5752LHDtzFotRg3d860jwYa+vXY9NU42PgL230prgg+ivqojgpdTopXXAkZkZ
      7A7Hlpvdrqy7MuK7EStF8HbSoJc4KiJ4Lfst4tdjO5Hgjew6KmuCl9gsPXuldqiaCB7xjFBn
      MxBKCJg0Mmy1NXh9fnLFIk31dvp7btD9wF1IpGoS0Qg5QYnNYtwyHTqdiC2nQ7+/zXToo5YG
      vcROIsGHIYq3Ewk+bLG+l3ToJbYr6nekAXKZBH0jU3Q01ROPxfB4hnE1NiGVCIxNTNPgsIK0
      SHw+jtc/w2zATwkW06FP4q63MzI+gU5YwB9OLKdDV9YAqzGbzbia25kaHcRid+DxjNBz+SIq
      7eFPHUR+M9mRA6g0Blrra5iaiQJQKgsIpRzFEoCEXDa3XDYcnCKbLVJGTIcWObrsaArkdFei
      uIlEAovBhUohZTI4R0tTI8VsikSmjAYNTrcDu01DIiegYH/SoY9aGvQSOxGYhyGKtyOCD1us
      35KR4INgSRztNB33qIngnc6vDysdeq2dYiR4DefffZMavRa9+zhWrQpBKCCRSInPz6LWGcgW
      wKRXMz87g83ZRDm7QDRdwmbUkMrmUGqMSLPz9I8HsVptWI1KIgt5mhssxBIZpHIl8+EAdmcT
      WpViWRwdhc2bNmI7Ivgwo647SYc+LDuPdCR4LYl0ngZdmWn/PPlCBLlMgrOpjYGBAYx6HQuR
      Ao1tHYx4PJSKeSwaGVMxOZGSio8cMzM4MsOdd5xGCkQjM8x6+1HKj9PnneOeZgPRggKHsPc9
      IEVE1mNPEyhbnZMzJ1sITEcplQssJJIgV6HXajCbDMikUpApUEhBIpURjYSIprNQltDa1oJU
      IqHOosMXiJDJZPBPh2h2O8jnSzS3tKGpcdBk1TAy7q/W/YqIrGJPTwCVTEIgKnC8vYXgpI9a
      +3F0i3M2l9MFwKR/nAl/kK6uDlpcNmaiaVz2muUr1za0IMwEiCeltDQ2kCmUqTOaKEsUKBUC
      gUCIro5WYEWE8Ahs3rQRRz3KKkaCV7PvIni3G2itV29JHB2UiNyrCN7tbtB7tWMz1orgndh4
      GJHgzYTwAYrgElcuXEJrsNDc6kKu1JLPJEEoE47EaG5qJD4fpiTToFHKyKXSyHUaouFZ9EY9
      6VwRvRKmwzFam11EI7NkyzIaHNatj0haZ3foo5S6u5aVIvgoivW1Ivgo2rgyErzfQnibDiBF
      o1EhyGWkQ1PQ0EnQ56VcKtPZ1sTw6DDZjIBMGkYuKaEy2MgEp2jpcHNjcB6dtoS6zkYmNoVn
      QkEqMotWr6hEjhdZOiKphIS5FUckNTS34vGM0X2sfZ+6QOR2ZpsiuES9qw1NYYGFIhRyOZLJ
      DAqlCqFURCaXE5qeJJsvIVFqaGlsQKHWotGoMOn0SGUyxv1TNLY2QS6P0WhEJltKYhKPSBI5
      PLb5BJBTyC2gsrppsNfg9fo53t3NxPgwM7E8bS2t1Bp0pItSaowV4eJ0uQBVZSdoTEhKeaLp
      HI3u2sU2K68293pE0lFjpcA8imJ9rQg+ijauHOf9FsJ7EsE7F7hbpzxvxq0mgley2/XAu7Fj
      M1aK4J3adBuL4PVZ/eMXuHblEkq1Bo3JjryYJFtW0NHayKRvjIGhUc7edQcz/iBWp5MGu2V5
      3W88EiKPEllikr4w3HWyE6GYQmOwEJy8dUXwSg47xXiJlSL4qNi0loMUwdWbTxRiKHROuk+c
      Ih2L4HI5SadSALib23A6XTisZvIliEdnGfPcTHkuFgr09/aiX0yHjk57CcYyTAyLRySJ7C/V
      cwCFgVwqQiY5DwotAwMeuk8c+1Axk8mETCajuCLlORSZx1FjBHklHVqQKGlraRRFsMi+U52J
      5WJTx7uaCc4l6O5qYWLMg8/np6O1CYCWlmYqG23VAWW0GtXyut90TEZZpkFtqsEY82FyOpED
      x8/ceUuL4JUcdorxEitF8FGxaS23jAg+aHo9furstdteC7zEURDBazmoCOxadpIOvdbGgxTB
      Z7oaq9bmvongJfp7r6BQ63DV15EW1GhleTL5MrJSlqJMg06tQIaAVK1h2jeO3dmEigJDfZcJ
      FYycOd6GvJRFpdMzPRWkubWF+cgser2OSDhMnbsZpawigu8703Yk1wIvsd01wYcVgd1JOvRh
      2fi9l67yzW04QDWownyiADIdXV3H0EkzzKeLXL54AY0sz3S0gFGnZmpqmvlJL4EpH9GCAolQ
      RqbS0tHSiKu5nbmgj7lEDkoFSvkk/YOjxGMxvCMj2Orq8I6JIlhkf6iCAyjI55IUC1lyi5tl
      1bub0KgUIKlsjFIulVhIJFCaNkhvlqtpa3YxPu7D6W5GJq08opVqHRq1Bqlkdwc6iIhsRVWm
      QKdOdOPzB2lubMCtlYPJhVStxWnOkUjnsFtN5Mw1WPUqpnw305vlxjrcZQWYKjtMd3a0EZxL
      0Na0+vHndLqBijhqazx6761Xst1U48OKwO4kHfqwbPzknS0Hdq1bSgSP+kO0L26VvhMOQwRX
      M3hTbRGcKUp3laZ9lDbG0qkVNNoNhy+CJ8aGSOXBUd+ASlomX5aSjkfQW+oppqPMxRJYHQ3U
      mg2kUkl0Oj2X3juHzmRCZ67DrBZYyEODRU9k+WgkBV5/kOZmN5MTNyPBb/R4d+UAB8mSCD6q
      0WpvMMZLFyeOXAr0SrazMdbJFjv/5asP7Plae9YAiUyB7uPHqDWruXjhGjqdmkKhTG9vL1ZH
      A/lshnwsyMxCigl/EABzraMSMY7PUigW8Pb3Ep6dJFpUMxOcYnDIg8tZx/CgGAkW2V/27ACS
      UpFMvkAmm8Xd1AwLAbJKCzqNimnfMHVNndQ3tzNy4R0czTfndqnYLCh0TIciuB015Es3j0aS
      LornghgJFtln9jwF6j59mgmvF2u9G6erDpVWhS7ho6Gzk1xinvmZSQy6DowOJ7WayuV0WgVz
      qTLHO5qIzqoolGUYTTokisrRSGqlDN9kiJNn78S3IhJ8VDfDWslRX29rr9EdqMjcDduJ+FdL
      oO+fCC4XSOdBq1aQTcbJocSk3/5f8vVSrROJBAaDYcemHKQI3o191bZjM/Zi40GJ4O3aeOCR
      4PycjwANWPNeIsoWtKUYWrWSSCyFViGgNdsppWMs5MFdK2MqBBZNlqJUi15TeZefSibJpOIU
      pVrqbDU7WhMsIlJtdqwB/N4RRn1TAMTiMcbGxlHlomRVNUxNeJdFbaJYKV8oFOm93svCzCRz
      yRQTU+Hlz1aytCY4lZhlZsWaYFEEi+wnO3aAxpYO2ptdy//W6nUoFUp0eh1SqfSmqC0DlAjP
      LWAx6Wlo7aDv/Lu4Wt3Ln1UQ1wSLHB47mgLJjXXUIUdRdlMnlVPWVBxBIa20pHE5yaUWKqJW
      Y0RTB0lVHkGpB4kMS30DRqWCentN5TN2tiZYRKTaHFgkOJ2IUZRpMO5hr39RBO8dUQSvZvdx
      AKHI1SuX8XiGiKdyhGfClIt5xsbGSWfzhINThOdiAMRnA3i8U8TjcTLJOFPBMAhl/N4xFlJZ
      0okYvskA4bFrvP7+NXLFMhNeL8WyQDqVJBKZ37WZIiKbsWsHKMQCaOo60Sogk8kTj8UZGvLg
      bqxjciJAoVCgt7cidMUjkkSOKrt2AIXBSmLGT0Odhdm5JAACUC7kKAk5IvPZ5T2CxCOSRI4q
      u59YyrWc6HDhDUY53tFMPpuhlM8yOTWFQmXDYsgj0zQA1TsiSUSk2qwSwYlE4jBt2ZLd7jS9
      27Okdlpvt/ZV247N2IuNe7FjJ3W3a+N229ys3KonwH68wag2u7HxoBwA9qcPq+kAsHsbD8oB
      YHs2VsMBjvYeI1Vit4NWzR/dXvhNsGM/7mG7bW5W7mj07A6IzYWJRBc2LyQIxOLxD5Wf9vvI
      5IsbVitk04yO+ygJwo7qrSU4NUEqu3vtUsyl8Xg8zERi5DNJ/NMhAKKREHOx5K7bXUIoF/GO
      +yhtIwKUiEbwB2aAm/cllAqMeycob6P+7OzsrupuNM4r+wMgPj+Lx+MhuUl/x2KxDb+7tRyg
      lMY7HSU0MU5hkw6MhIP4/JOryk96PUgNVjyDAxvWiy0kaGqo4UZ//47qrWRucpSCuoaRoe2V
      X4/ghB9nexcOq5mBoVEMkiTeqWkmZlJM+0bZ65GBQzduYK+zMjA4vEVJgXS+hCwRZNAzvHxf
      AzcGqLPXMLBFjtZ8yE/vwNiqPtlW3U3Geak/fDMVvRqYmaOrqwu9WrFuU4lYBM+Ib8NL3VoO
      kFlAYbBiUStIbvIH2epoQKdWrCrvixepq9EjXz6X4MMYtCqu9Y/S4a7dUb2VzMVzOKxGFHuI
      3Frq7EyPDNE/OIJcoaCm3kHcO46mxo5BrmB7W29tTEkiR6fVI93yDZsEaTlPpKBGVigs35cg
      k6PVGaGY3biqUCQ4l6HOYljVJ9uqu8k4L/VHKhIFoNakY/DGNSYCc+s2ZTBbsRg3jiPdWg6g
      s5KdGWUykcO0vsMDMBOYZHJyitm8crn86QYTPdf7EaQbV7x0+QpGg56MRLejeitxNVjou9ZP
      ke05zHpks1mQgEQiQVLOc71nEOeZs8T9g4Szefb6nsmokdPf34/KYN6iZImrV/tQKyRY7TXL
      96VXSrlxow+tqXbDmuViEbkcpqenMJq0O6q72Tgv9Ye90cbkZKDSVwJIJOv/lGORGSanJpkO
      za77/S21K8R+5dpUi6NuH4g2ruXWegKIiFQZ0QFEbmtEBxC5rbmlHCA6G+DKlR4W0rkd1w3N
      zABFenp6ub5mOSaAb/Aqk5EkY54BYsks6YV5rly5gn86yLvn3v9Q+ezCLE89/8KHL1TKMbTJ
      a7eVTIx5yKx4z3f9ei8XL15Yt2wiOksqv/QCVGBksJ/w/BbxkE0Y83g2fZW88rrXevvJlzZ/
      +Tozc/PdfDGfpvdaL9nCxnu69vT0fOiz8YHeDd/ure2r9SnTd/UKYxPTW5S7iezv/u7v/m7b
      pQ+ZN3/xDEVzPW/82+vYdPCrty7jtmu4cLmXInJee/kXKIxWzv36X8kpzIR8A7z5+puoNWr+
      xz/8A1ZnKyqpjL7+a3S1unn66eewudswaFW8/s57WJnlgjfJ5QvvIYlPMS8zY6uxEPcPonF2
      oJOX+defPEO0qOTdF76PP2/it+66uQ1KPp8nMPAB3/vFOX7rY6cZHPSRjEwjyGX89LnnKMi0
      NDiW3n4UeeaJbxJXOKnXl3j62Z/inQ7T2dpMJjqLzGRjqL8X7+BVPrjhZ+j8L/nVpQk+ds8Z
      3nnxeQJpKXqNhr6Lb3JtbIZaZZ6Xfv06GUFFIjTCi/92jq7u47zx4k+Yyylw1dUu26iSFXji
      m/8ThfMssaAXi1bCcCDKhddfYjgQp7O1sjdrITHDt//5eZyOGpQ6E5M+P7OBabR6Bc8u9t2V
      t19mJjbPo9/8NuistDe7+JfHvo3Z5kCtUvHLnz5HUWkmOjvN9ev95DIJrvcPYdDp0CnLPP3c
      z3G3dXH9/dd47rkXOPvgZ1CW86hUKzOAb/ZVJhbEYTPSd8PHYM87vNc3wanjS2dI53j6hz+h
      mJhmMq1l3nuVCzcmURcTyPVaLly6QSo+x0xoinNvvQEyxa3lAEPX3sczFcFotnG95yJmWZJg
      NMd0SoU2Noj7ns8iC/TQPydjuP8quXSSf3f/KS5O5HGY1fz+pz/Oa6+eB0mR4MgguoZGenr6
      ufNMN56hIU6dOskH773PVHie+z96lqtXLjGfFjjTZGA8oaU0dYlEzSlGrr7DqQ4Xpx74HDb9
      zff9+Xye1954mxarlJiikfH+CwTCEULjo/z25/6IaxfOcaK7G4DZkcvciGmJBryEp7z87sNf
      wjd8g3g0Rmkhgr65mw/eepXQlA+VuY52h45TD34Bh17OOxeu8MUvfB6rxUgwGOL6latYTRJq
      uz9B3/uv4XA4yEa8jPoCCLXHuP9s2/K5zPl8Hn/fe8S0bgLecYSFMNPBIKV8gnzNMdIzo5w4
      cQKAOV8fZdspIp5zyC2NjAwMMTvlZ3x0AFNDIz09fYR8Hho6TqNWyXn4D34fgBtDw3z2sw+h
      LGeIZQWuXu0h4h/m7k98lrdf/hn3f+YP+ODddxgZvE5DYz091/qYjcGpJhOOrjMfcoCVfWVX
      pBmdDJAtFfHHlaiKMU6c6F4sWWRsfIYvfvmznH/zLQLzZZrUcSJ5gSsXr+OLZcjFw0Rmwnzm
      oU/wxluDt9YUCBT8yde+zle/8oe4HBaiRS11RiWdXV00tbXx8nNPMl9UEw+M09TaiUKtQatW
      UhYE0pEpLlwfWW6pua2FkaFhuo51ASAgQaFQolLK6OrqJpvNI0GCXCYjPBvDYTdhdbVw5bWf
      kS6vPrbz4sUL+Id7CUSzJDMFGrvuYLz3Ama1QElpxGk38cxTPyaeLi1Pcd7rGeaO7mbK+TQW
      i56nf/wMycWZncGg4tknf8BCFmpqahgYGKTWXscvnn2GInB3l5v/71vf5tzlHt554x1iCxkE
      4JWfP01ZaaLn4ntMzUQwOtwMvPcyF3qHuXDxIr0XLpIFeoYDdDc3kE/H+NjdXfzrBR8n2xu5
      /PovGfGHl+/F1nqagXd+ij8Uo1CWMnL9fa4MjK3ou3ZqamqJzIRRldP86u3KvRnkRR597DF6
      rl7j4tUb5Eugr23AZTVgtrtwLG5q1dbSyNDwJMe6u4lMXOf9nqF1R31lX5267z6e/snr3HPH
      Mfx957gyOM6sf5jxQCUwduPKOb7xje/xkQc/RX5+jHM3prnznnu5dOUa97jV5BQGkKsw6DVI
      ywIItxALCwv71valt38t+GcTH/6iXBB+9vNfbquNjeyb8FwTHv2nfxRefOODzeuHJ4RvPPrk
      tq61lhvnXhRuBDO7tjG/MCM89thjwmNPPrer61eT7Y1zWnjysceE//fb/7yna4mBsCpy1O0D
      0ca13GJTIBGR6nJLPQFERKqN+AQQua0RHUDktkZ0AJHbGtEBRG5rRAcQua0RHUDktkZ0AJHb
      GtEBRG5rRAcQua0RHUDktkZ0AJHbGtEBRG5rRAcQua0RHUDktkZ0AJHbGtEBRG5rRAcQua0R
      HUDktkZ0AJHbGtEBRG5rRAcQua35/wEyMuxCBmlDZgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Park Waiting/Up/Down Time and Capacity/Guest Carried Overview' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='QOQ Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='QOQ Analysis Comparison' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sample Dashboard for the Park Management' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='YOY Overview Analysis' width='192'>
      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
      wwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='YOY Overview Analysis(Comparison)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
